name: mcp

services:
  backend:
    container_name: mcp-backend
    build:
      context: ./backend
    ports:
      - "8021:8021"
    volumes:
      - ./backend:/code
    environment:
      - SUPABASE_URL=http://${GATEWAY_IPv4}:${SUPABASE_PORT}
      - SUPABASE_KEY=${SUPABASE_ANON_KEY}
      - BACKEND_PORT=${BACKEND_PORT}
    tty: true
    stdin_open: true
    networks:
      - app-network
    extra_hosts:
      - host.docker.internal:host-gateway

  frontend:
    container_name: mcp-frontend
    build: ./frontend
    ports:
      - "3000:3000"
    develop:
      watch:
        - action: sync # <- ここ
          path: ./frontend 
          target: /app/frontend
          ignore:
            - node_modules/
        - action: rebuild
          path: package.json
    volumes:
      - ./frontend:/app/frontend
    depends_on:
      - backend
    environment:
      - NEXT_PUBLIC_SUPABASE_BROWSER_URL=http://localhost:${SUPABASE_PORT}
      - NEXT_PUBLIC_SUPABASE_URL=http://${GATEWAY_IPv4}:${SUPABASE_PORT}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - BACKEND_URL=http://backend:${BACKEND_PORT}
    tty: true
    stdin_open: true
    networks:
      - app-network
    extra_hosts:
      - host.docker.internal:host-gateway

  website:
    container_name: mcp-website
    build: ./website
    ports:
      - "80:80"
      - "3090:3090"
    volumes:
      - ./website:/app/website
    depends_on:
      - frontend
    environment:
      - SUPABASE_URL=http://${GATEWAY_IPv4}:${SUPABASE_PORT}
      - SUPABASE_KEY=${SUPABASE_ANON_KEY}
      - BACKEND_URL=http://backend:${BACKEND_PORT}
    tty: true
    stdin_open: true
    networks:
      - app-network
    extra_hosts:
      - host.docker.internal:host-gateway
    working_dir: /app/website
    command: ["npm", "run", "start"]

networks:
  app-network:
    external: true
